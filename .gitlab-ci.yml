default:
  image: node:lts-alpine

# Cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - packages/gitbeaker-core/node_modules/
    - packages/gitbeaker-cli/node_modules/
    - packages/gitbeaker-browser/node_modules/
    - packages/gitbeaker-node/node_modules/
    - packages/gitbeaker-requester-utils/node_modules/
    - node_modules/

stages:
  - install
  - build
  - lint
  - test
  # - canary
  # - release

#Link and Install all required dependancies
install:
  image: node:lts
  stage: install
  variables:
    PLAYWRIGHT_BROWSERS_PATH: 0
  script:
    - yarn
    - yarn add -D -W playwright

# Build core (cjs, es, and browser) and cli packages
# Uses work around to allow for linking of the cli packages
build:
  stage: build
  script:
    - yarn build
  artifacts:
    paths:
      - packages/gitbeaker-core/dist/
      - packages/gitbeaker-cli/dist/
      - packages/gitbeaker-browser/dist/
      - packages/gitbeaker-node/dist/
      - packages/gitbeaker-requester-utils/dist/

# Lint all code, tests and supporting documentation (README, CHANGELOG etc)
lint:src:
  stage: lint
  script: yarn lint

lint:docs:
  stage: lint
  script: yarn lint:doc

# Unit Tests
test:unit:cli:
  stage: test
  script: yarn workspace @gitbeaker/cli test:unit  && yarn codecov -F cli

test:unit:core:
  stage: test
  script: yarn workspace @gitbeaker/core test:unit && yarn codecov -F core

test:unit:node:
  stage: test
  script: yarn workspace @gitbeaker/node test:unit && yarn codecov -F node

test:unit:browser:
  stage: test
  image: mcr.microsoft.com/playwright:bionic
  variables:
    PLAYWRIGHT_BROWSERS_PATH: 0
  script: yarn workspace @gitbeaker/browser test:unit && yarn codecov -F browser

test:unit:utils:
  stage: test
  script: yarn workspace @gitbeaker/requester-utils test:unit && yarn codecov -F utils

#Integration Tests
test:integration:
  stage: test
  image: mcr.microsoft.com/playwright:bionic
  variables:
    PLAYWRIGHT_BROWSERS_PATH: 0
    GITLAB_OMNIBUS_CONFIG: |
      gitlab_rails['monitoring_whitelist'] = ['0.0.0.0/0', '172.17.0.1'];
    GITLAB_ROOT_PASSWORD: 'password'
    GITLAB_URL: http://gitlab:80
    GITLAB_PERSONAL_ACCESS_TOKEN: 'superstrongtoken'
  services:
    - name: gitlab/gitlab-ce:latest
      alias: gitlab
      entrypoint:
        - '/bin/sh'
        - '-c'
        - "printf '#!/usr/bin/env ruby \nu = User.first \nu.admin = true \nu.save! \nt = PersonalAccessToken.new({ user: u, name: \"gitbeaker\", scopes: [\"api\", \"read_user\"]})  \nt.set_token(\"superstrongtoken\") \nt.save!  \nputs t.token\n' > /opt/gitlab/embedded/service/gitlab-rails/db/fixtures/production/40_access_token.rb && /assets/wrapper"
  before_script:
    - apt-get install jq curl --yes
    - echo "Waiting for service to start"
    - sleep 180
    - |
      while [[ "$(curl --fail --silent -X GET "$GITLAB_URL/-/readiness?all=1" --insecure | jq -r '.master_check[0].status')" != "ok" ]];
      do echo "Polling service - not alive yet";
      sleep 10;
      done;
    - echo "Service is up and running!"
  script:
    - ls
    - ls ./node_modules/playwright
    # - yarn workspace @gitbeaker/node test:integration && yarn codecov -F node
    # - yarn workspace @gitbeaker/node test:integration --moduleNameMapper='{"src":"<rootDir>/dist/index.js"}'
    - yarn workspace @gitbeaker/browser test:integration
    # - yarn workspace @gitbeaker/node test:integration --moduleNameMapper='{"src":"<rootDir>/dist/index.es.js"}' Requires module identifier
# # Canary
# canary:
#   stage: canary
#   only:
#     - external_pull_requests
#   before_script:
#     - apk add --no-cache git
#     - git remote set-url origin https://jdalrymple:${GITHUB_TOKEN}@github.com/jdalrymple/gitbeaker.git
#     - git checkout $CI_COMMIT_REF_NAME
#     - npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
#     - npm config set always-auth=true
#   script: |
#     if yarn auto label --pr $CI_EXTERNAL_PULL_REQUEST_IID | grep 'canary'; then
#       echo "canary label found, starting canary deployment!"
#       yarn auto canary
#     else
#       echo "Skipping, canary label isn't present."
#     fi
#
# # Release
# release:
#   only:
#     refs:
#       - master
#   stage: release
#   before_script:
#     - apk add --no-cache git
#     - git remote set-url origin https://jdalrymple:${GITHUB_TOKEN}@github.com/jdalrymple/gitbeaker.git
#     - git checkout master
#     - npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
#     - npm config set always-auth=true
#   script: yarn release
