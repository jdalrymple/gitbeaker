import { BaseResource } from '@gitbeaker/requester-utils';
import { RequestHelper, endpoint } from '../infrastructure';
import type { SimpleProjectSchema } from './Projects';
import type {
  BaseRequestOptions,
  GitlabAPIResponse,
  PaginationRequestOptions,
  PaginationTypes,
} from '../infrastructure';

export interface VulnerabilityFindingSchema extends Record<string, unknown> {
  id: number;
  title: string;
  description?: string;
  state: string;
  severity: string;
  confidence: string;
  report_type: string;
  project: SimpleProjectSchema;
  author_id: number;
  updated_by_id?: number;
  last_edited_by_id?: number;
  closed_by_id?: number;
  start_date?: string;
  due_date?: string;
  created_at: string;
  updated_at: string;
  last_edited_at?: string;
  closed_at?: string;
}

export class VulnerabilityFindings<C extends boolean = false> extends BaseResource<C> {
  all<E extends boolean = false, P extends PaginationTypes = 'offset'>(
    projectId: string | number,
    options?: PaginationRequestOptions<P> & BaseRequestOptions<E>,
  ): Promise<GitlabAPIResponse<VulnerabilityFindingSchema, C, E, P>> {
    return RequestHelper.get<VulnerabilityFindingSchema>()(
      this,
      endpoint`projects/${projectId}/vulnerability_findings`,
      options,
    );
  }
}
