import { UserSchema, LicenseTemplateSchema } from '.';
import { ProjectSchema } from './ProjectSchema';
import { NamespaceInfoSchema } from './NamespaceInfoSchema';
import { AccessSchema } from './AccessSchema';
import { SharedWithGroupSchema } from './SharedWithGroupSchema';

export interface ProjectExtendedSchema extends ProjectSchema {
  visibility: string;
  owner: Pick<UserSchema, 'id' | 'name' | 'created_at'>;
  issues_enabled: boolean;
  open_issues_count: number;
  merge_requests_enabled: boolean;
  jobs_enabled: boolean;
  wiki_enabled: boolean;
  snippets_enabled: boolean;
  can_create_merge_request_in: boolean;
  resolve_outdated_diff_discussions: boolean;
  container_registry_enabled: boolean;
  container_expiration_policy: {
    cadence: string;
    enabled: boolean;
    keep_n?: number;
    older_than?: string;
    name_regex_delete?: string;
    name_regex_keep?: string;
    next_run_at: string;
  };
  creator_id: number;
  namespace: NamespaceInfoSchema;
  import_status: string;
  import_error?: string;
  permissions: {
    project_access: AccessSchema;
    group_access: AccessSchema;
  };
  archived: boolean;
  license_url: string;
  license: Pick<LicenseTemplateSchema, 'key' | 'name' | 'nickname' | 'html_url' | 'source_url'>;
  shared_runners_enabled: boolean;
  runners_token: string;
  ci_default_git_depth: number;
  ci_forward_deployment_enabled: boolean;
  public_jobs: boolean;
  shared_with_groups?: SharedWithGroupSchema[];
  repository_storage: string;
  only_allow_merge_if_pipeline_succeeds: boolean;
  allow_merge_on_skipped_pipeline: boolean;
  restrict_user_defined_variables: boolean;
  only_allow_merge_if_all_discussions_are_resolved: boolean;
  remove_source_branch_after_merge: boolean;
  printing_merge_requests_link_enabled: boolean;
  request_access_enabled: boolean;
  merge_method: string;
  auto_devops_enabled: boolean;
  auto_devops_deploy_strategy: string;
  approvals_before_merge: number;
  mirror: boolean;
  mirror_user_id: number;
  mirror_trigger_builds: boolean;
  only_mirror_protected_branches: boolean;
  mirror_overwrites_diverged_branches: boolean;
  external_authorization_classification_label?: string;
  packages_enabled: boolean;
  service_desk_enabled: boolean;
  service_desk_address?: string;
  autoclose_referenced_issues: boolean;
  suggestion_commit_message?: string;
  marked_for_deletion_at: string;
  marked_for_deletion_on: string;
  compliance_frameworks?: string[];
  statistics: {
    commit_count: number;
    storage_size: number;
    repository_size: number;
    wiki_size: number;
    lfs_objects_size: number;
    job_artifacts_size: number;
    packages_size: number;
    snippets_size: number;
  };
  container_registry_image_prefix: string;
  _links: {
    self: string;
    issues: string;
    merge_requests: string;
    repo_branches: string;
    labels: string;
    events: string;
    members: string;
  };
}
